<?php
namespace app\modules\front\controllers;

use app\models\question\Knowledgepoint;
use app\models\question\Questions;
use app\models\question\FindError;
use app\models\system\TbcuitmoonDictionary;
use app\models\exam\Stutestrecorddetails;
use app\models\exam\Stutest;
use app\models\systembase\Studentinfo;
use common\commonFuc;
use app\models\teachplan\Teachingclassdetails;
use app\models\teachplan\Teachingclassmannage;
use Yii;

class TestController extends BaselimitController
{
    public $enableCsrfValidation=false;
    public function actionIndex()
    {
        return $this->render('index');
    }


    public function actionLeft()
    {
        $this->layout = "//paper";
        $m_dic = new TbcuitmoonDictionary();
        $m_know = new Knowledgepoint();
        // TbcuitmoonDictionary::find()->select('CuitMoon_DictionaryName','CuitMoon_DictionaryName')
        // ->where()
        $course = [];
        $Info = [];
        $Tmp = [];
        $allTeach = Teachingclassdetails::find()->select('TeachingClassID')->where(['StuNumber'=>\Yii::$app->session->get('StudentNum')])->asArray()->all();
        foreach ($allTeach as $key => $value) {
            $course[] = Teachingclassmannage::find()->where(['TeachingClassID'=>$value['TeachingClassID']])->asArray()->one()['CourseID'];
        }
        $course = array_unique($course);
        foreach ($course as $key => $value) {
            $Info[] = TbcuitmoonDictionary::find()->where(['CuitMoon_DictionaryCode'=>$value])->one();
        }
        $Stage = $m_dic->getDictionaryList('题目阶段');
        foreach ($Info as $key=>$item) {
            foreach ($Stage as $va) {
                $Tmp[$item->CuitMoon_DictionaryName][$va->CuitMoon_DictionaryName] =
                    $m_know->find()->where([
                        'Stage' => $va->CuitMoon_DictionaryCode,
                        'CourseID' => $item->CuitMoon_DictionaryCode
                    ])->asArray()->all();
            }
        }
        return $this->render('left',[
            'list' => $Tmp
        ]);
    }

    public function actionQuestions()
    {
        $this->layout = "//paper";
        $Tmp = [];
        $m_question = new Questions();
        $m_dic = new TbcuitmoonDictionary();

        $Data = Yii::$app->request->get();
        $courseCode = $m_dic->findOne([
            'CuitMoon_DictionaryName' => $Data['course'],
        ])->CuitMoon_DictionaryCode;
        $stageCode = $m_dic->findOne([
            'CuitMoon_DictionaryName' => $Data['stage'],
        ])->CuitMoon_DictionaryCode;
        $where = [
            'CourseID' => $courseCode,
            'KnowledgeBh' => $Data['know'],
            'Stage' => $stageCode,
            'Checked' => '100001',
            'Score'=>'1'
        ];
        $StuNumber = \Yii::$app->session->get('StudentNum');
        $Type = $m_question->find()->select(['QuestionType'])->where($where)->groupBy('QuestionType')->asArray()->all();
        foreach ($Type as $item) {
            $m_question = new Questions();
            $where['QuestionType'] = $item['QuestionType'];
            $Tmp[$item['QuestionType']] = $m_question->find()->where($where)->asArray()->all();
            foreach ($Tmp[$item['QuestionType']] as $key => $value) {
                $answer = Stutest::find()->select(['StuAnswer','Score'])->where(['StuNumber'=>$StuNumber,'QuestionBh'=>$value['QuestionBh']])->asArray()->one();
                $Tmp[$item['QuestionType']][$key]['StuAnswer'] = $answer['StuAnswer'];
                $Tmp[$item['QuestionType']][$key]['AnswerScore'] = $answer['Score'];
            }

            foreach ($Tmp[$item['QuestionType']] as $key => $value) {
                $Tmp[$item['QuestionType']][$key]['SourceCode'] = json_decode($value['SourceCode'],true);
            }
        }
        // print_r($Tmp);
        return $this->render('question.php',[
            'info' => $Tmp,
        ]);
    }
    //填空题答案
    public function actionGetFillAnswer()
    {
        if(\Yii::$app->request->isPost)
        {
            $post = \Yii::$app->request->post();
            if(isset($post['QuestionBh']) && $post['QuestionBh'])
                echo json_encode(Questions::find()->select(['ApfillPosition','Answer','Proportion'])->where(['QuestionBh'=>$post['QuestionBh']])->asArray()->all());
        }
    }
    //改错题答案
    public function actionGetCorrectAnswer()
    {
         if(\Yii::$app->request->isPost)
        {
            $post = \Yii::$app->request->post();
            if(isset($post['QuestionBh']) && $post['QuestionBh'])
            {

                $res = FindError::find()->select(['ErrorCount','Content','Answer'])->where(['QuestionBh'=>$post['QuestionBh']])->asArray()->all();
                foreach ($res as $key => $value) {
                    $res[$key]['Answer'] = json_decode($res[$key]['Answer'],true)['key'];
                }
                echo json_encode($res);
            }

        }
    }
    //添加练习信息
    public function actionAddTestInfo()
    {
        if(\Yii::$app->request->isPost)
        {
            $post = \Yii::$app->request->post();
            $StuNumber = \Yii::$app->session->get('StudentNum');
            $aim = '';
            $StuDetailHis = '';
            if(isset($post['QuestionBh']) && $post['QuestionBh'])
            {
                $CourseID = Questions::find()->where(['QuestionBh'=>$post['QuestionBh']])->asArray()->one()['CourseID'];
                $com = new commonFuc();
                $StuDetailHis = Stutestrecorddetails::find()->where(['StuNumber'=>$StuNumber,'CourseID'=>$CourseID])->orderBy('InTestTime DESC')->asArray()->one();

                if($StuDetailHis == null || (strtotime(date('Y-m-d H:i:s')) - strtotime($StuDetailHis['InTestTime'])) >= 60*20)
                {
                    $isExist = Stutest::find()->where(['StuNumber'=>$StuNumber,'QuestionBh'=>$post['QuestionBh']])->one();
                    if($isExist)
                    {
                        $isExist['StuAnswer'] = $post['StuAnswer'];
                        $isExist['Score'] = $post['Score'];
                        $isExist['SubmitTime'] = date('Y-m-d H:i:s');
                        $isExist->save();
                    }
                    else
                    {
                        $NewDetail = new Stutestrecorddetails();
                        $NewDetail['DetailsID'] = $com->create_id();
                        $NewDetail['InTestTime'] = date('Y-m-d H:i:s');
                        $NewDetail['StuNumber'] = $StuNumber;
                        $NewDetail['IPAddress'] = $com->getClientIp();

                        $NewDetail['CourseID'] = $CourseID;
                        if($NewDetail->save())
                        {
                            $new = new Stutest();
                            $new['StuNumber'] = $StuNumber;
                            $new['QuestionBh'] = $post['QuestionBh'];
                            $new['StuName'] = Studentinfo::find()->where(['StuNumber'=>$StuNumber])->asArray()->one()['Name'];
                            $new['StuAnswer'] = $post['StuAnswer'];
                            $new['SubmitTime'] = date('Y-m-d H:i:s');
                            $new['Score'] = $post['Score'];
                            $new['DetailsID'] = $NewDetail['DetailsID'];
                            $new->save();
                        }
                    }
                }
                else if($StuDetailHis && (strtotime(date('Y-m-d H:i:s')) - strtotime($StuDetailHis['InTestTime'])) < 60*20)
                {
                    $aim = Stutest::find()->where(['QuestionBh'=>$post['QuestionBh'],'StuNumber'=>$StuNumber])->one();

                    if($aim)
                    {
                       $aim['StuAnswer'] = $post['StuAnswer'];
                       $aim['SubmitTime'] = date('Y-m-d H:i:s');
                       $aim['Score'] = $post['Score'];
                       $aim->save();
                       echo "has";

                    }
                    else
                    {
                        
                        $detail = new Stutest();
                        $detail['DetailsID'] = $StuDetailHis['DetailsID'];
                        $detail['StuNumber'] = $StuNumber;
                        $detail['QuestionBh'] = $post['QuestionBh'];
                        $detail['StuName'] = Studentinfo::find()->where(['StuNumber'=>$StuNumber])->asArray()->one()['Name'];
                        $detail['Score'] = $post['Score'];
                        $detail['StuAnswer'] = $post['StuAnswer'];
                        $detail['SubmitTime'] = date('Y-m-d H:i:s');
                        $detail->save();
                    }
                }  
            }

        }
    }
}